{"name":"JBehave to Gherkin","tagline":"Convert JBehave stories to Gherkin features","body":"# JBehave to Gherkin [![Build Status](https://travis-ci.org/adaptive-logic/jbehave-to-gherkin.png?branch=master)](https://travis-ci.org/adaptive-logic/jbehave-to-gherkin)\r\n\r\nConverts JBehave grammar to [Gherkin]((https://github.com/cucumber/cucumber/wiki/Gherkin)) for use by [Cucumber](https://github.com/cucumber/cucumber), [SpecFlow](https://github.com/techtalk/SpecFlow), [Behat](https://github.com/Behat/Behat) or [behave](http://pythonhosted.org/behave/).\r\n\r\n## Download\r\n\r\nDownload a [the release JAR with all dependencies](https://github.com/adaptive-logic/jbehave-to-gherkin/releases/download/jbehave-to-gherkin-1.0.0/jbehave-to-gherkin-1.0.1-jar-with-dependencies.jar) or [the standalone release JAR](https://github.com/adaptive-logic/jbehave-to-gherkin/releases/download/jbehave-to-gherkin-1.0.1/jbehave-to-gherkin-1.0.0.jar).\r\n\r\n## Usage\r\n\r\nJBehave to Gherkin is a Java application which reads a JBehave story from stdin, and writes a Gherkin feature to stdout, which means it works well with redirects and pipes.\r\n\r\n```shell\r\n$ java -jar jbehave-to-gherkin.jar < example.story > example.feature\r\n```\r\n\r\n## Example Conversion\r\n\r\nThe following example shows the expected output for a sample story. \r\n\r\n### Input\r\n\r\n```jbehave\r\nGherkin feature description\r\n\r\nMeta:\r\n@meta\r\n\r\nNarrative:\r\nIn order to use Cucumber\r\nAs a business analyst\r\nI want to convert my JBehave to Gherkin\r\n\r\nLifecycle:\r\nBefore:\r\nGiven I am a before step\r\n\r\nScenario: Gherkin scenario description\r\nMeta:\r\n@scenario-meta\r\nGiven I have some JBehave stories\r\n|name|rank|\r\n|Larry|Stooge 3|\r\n|Moe|Stooge 1|\r\n|Curly|Stooge 2|\r\nWhen I execute jbehave-to-gherkin\r\nThen I should have Gherkin features\r\n\r\nScenario: Second scenario\r\nMeta:\r\n@author Joe Bloggs\r\nGiven a [precondition] has occurred\r\nWhen an action is performed\r\nThen a [postcondition] should occur\r\n\r\nExamples:\r\n|precondition|postcondition|\r\n|foo|bar|\r\n```\r\n\r\n### Output\r\n\r\n```gherkin\r\n@meta\r\nFeature: Gherkin feature description\r\n  In order to use Cucumber\r\n  As a business analyst\r\n  I want to convert my JBehave to Gherkin\r\n\r\n  Background: \r\n    Given I am a before step\r\n\r\n  @scenario-meta\r\n  Scenario: Gherkin scenario description\r\n    Given I have some JBehave stories\r\n\r\n      | name  | rank     |\r\n      | Larry | Stooge 3 |\r\n      | Moe   | Stooge 1 |\r\n      | Curly | Stooge 2 |\r\n    When I execute jbehave-to-gherkin\r\n    Then I should have Gherkin features\r\n\r\n  @author-joe-bloggs\r\n  Scenario Outline: Second scenario\r\n    Given a [precondition] has occurred\r\n    When an action is performed\r\n    Then a [postcondition] should occur\r\n\r\n    Examples: \r\n      | precondition | postcondition |\r\n      | foo          | bar           |\r\n```\r\n\r\n## Limitations\r\n\r\nThere is no support for After steps or GivenStories from JBehave, as there is no corresponding keyword in Gherkin.  Furthermore, Meta values are concatenated and converted to lowercase, so that \"@name Foo Bar\" in JBehave becomes \"@name-foo-bar\" in Gherkin.\r\n\r\nThere is also no support for the But step definition or DocStrings in Gherkin, as there is no corresponding structure in the JBehave grammar.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}